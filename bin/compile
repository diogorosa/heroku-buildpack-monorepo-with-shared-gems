#!/usr/bin/env bash

# Ensure wildcards in globs match dotfiles too.
shopt -s dotglob

indent() {
    sed -u 's/^/      /'
}

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"
STAGE="$(mktemp -d)"

if [ ! -f "${ENV_DIR}/IMPLEMENTATION" ]; then
    echo "IMPLEMENTATION was not set. Aborting" | indent
    exit 1
fi
IMPLEMENTATION="$(cat "${ENV_DIR}/IMPLEMENTATION")"
SHARED="${STAGE}/$(basename ${IMPLEMENTATION})/shared"
echo '---------------'
echo 'base'
echo $IMPLEMENTATION
echo 'shared'
echo $SHARED
echo 'build dir'
echo $BUILD_DIR

echo '---------------'
ls "${BUILD_DIR}/implementations/${IMPLEMENTATION}"
echo '---------------'

(
    mv "${BUILD_DIR}/implementations/${IMPLEMENTATION}" "${STAGE}" &&
    mkdir -p "${SHARED}" &&
    mv "${BUILD_DIR}/shared/gems" "${SHARED}/" &&
    if [ -f "${STAGE}/$(basename "${IMPLEMENTATION}")/Gemfile" ]
    then
        sed --in-place --regexp-extended --expression 's/([.]{2}\/)*shared\/gems/shared\/gems/' "${STAGE}/$(basename "${IMPLEMENTATION}")/Gemfile" "${STAGE}/$(basename "${IMPLEMENTATION}")/Gemfile.lock"
        sed --in-place --regexp-extended --expression 's/([.]{2}\/)*shared\/gems/shared\/gems/' "${STAGE}/$(basename "${IMPLEMENTATION}")/package.json" "${STAGE}/$(basename "${IMPLEMENTATION}")/yarn.lock"
    fi &&
    rm -rf "${BUILD_DIR}"/* &&
    mv "${STAGE}/$(basename "$IMPLEMENTATION")"/* "${BUILD_DIR}"
)

if [ $? -ne 0 ]; then
    echo "FAILED to copy directory into place" | indent
    exit 1
fi

echo "Copied ${IMPLEMENTATION} to root of app successfully" | indent

